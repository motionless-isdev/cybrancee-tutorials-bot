import discord
from discord.ext import commands
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
import time

class Screenshot(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.hybrid_command(
        name="screenshot",
        description="Takes a live screenshot of a website."
    )
    async def screenshot(self, ctx, url: str):
        await ctx.defer()  # allow time for browser to load

        # Configure headless Chrome (no window pops up)
        chrome_options = Options()
        chrome_options.add_argument("--headless")
        chrome_options.add_argument("--no-sandbox")
        chrome_options.add_argument("--disable-dev-shm-usage")

        # Start browser
        driver = webdriver.Chrome(
            service=Service(ChromeDriverManager().install()),
            options=chrome_options
        )

        try:
            # Open the page
            driver.get(url)

            # Wait a bit for content to load (can adjust)
            time.sleep(2)

            # Save screenshot
            screenshot_path = "website_screenshot.png"
            driver.save_screenshot(screenshot_path)
            driver.quit()

            await ctx.send(file=discord.File(screenshot_path))
        except Exception as e:
            await ctx.send(f"‚ùå Error: {e}")
            driver.quit()

async def setup(bot):
    await bot.add_cog(Screenshot(bot))
